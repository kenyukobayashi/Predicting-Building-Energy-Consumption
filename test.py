import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

from cross_validation import CrossValidation

# neurons = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20] + [22, 24, 26, 28, 30]
# tr_losses = [0.43518397, 0.27743784, 0.25058928, 0.23782212, 0.25113997, 0.26236844, 0.25471714, 0.23420243, 0.25057608, 0.2500929] + [0.23876524, 0.2380077, 0.2538969, 0.22911373, 0.23017429]
# tr_stds = [0.00022189181, 0.0030364976, 0.01047094, 0.0049253427, 0.01785077, 0.036028672, 0.012986989, 0.002269584, 0.010082983, 0.014996742] + [0.013277277, 0.008480299, 0.009548422, 0.015784465, 0.008281838]
# te_losses = [0.43492562, 0.27482444, 0.2526996, 0.23634711, 0.24940921, 0.2596208, 0.25090185, 0.2319236, 0.25316978, 0.2548569] + [0.24409586, 0.23978755, 0.25179335, 0.226458, 0.23449168]
# te_stds = [0.043154936, 0.019448787, 0.014027607, 0.006796615, 0.029950717, 0.024569428, 0.01480302, 0.012355755, 0.01828044, 0.019293632] + [0.022284828, 0.012917058, 0.009242713, 0.0091545265, 0.02040618]


neurons = [10, 30, 50, 75, 100, 150]
te_losses = [0.5256733322053192, 0.515160703405541, 0.49381826011395463, 0.4980577500599299, 0.4899238191190855, 0.4851416593452137]
tr_losses = [0.5255279523362147, 0.5151396949982253, 0.49389887824702705, 0.4982756935481818, 0.4903476530833354, 0.48509839324715354]
te_stds = [0.03190711110915223, 0.03688612038901274, 0.023070622647324988, 0.04330773869848269, 0.04845353814400105, 0.020922197320632583]
tr_stds = [0.0008402180200200592, 0.0006822956276135816, 0.0003189597957636794, 0.00021064165331146435,8.779694180078314e-05, 0.0005518294465836781]
#
#
# neurons = [1, 2, 3, 5]
# te_losses = [0.49295840459402823, 0.49275577688942573, 0.5047483431412533, 0.5136137159521934]
# tr_losses = [0.4929622793929226, 0.4927113398834736, 0.5047783690361729, 0.5136237467913032]
# te_stds = [0.02433154260888313, 0.02444991446281182, 0.023483127783119877, 0.022859143385313474]
# tr_stds = [0.0003031061774512846, 0.00031569983578129526, 0.00033878905571421285, 0.0003374410555365178]

if __name__ == '__main__':
  # dataset = pd.read_csv('data/sanitized_complete.csv').set_index('EGID')
  # dataset.dropna(inplace=True)

  # print(CrossValidation(dataset, 4).para(f))

  # plt.errorbar(neurons[:-1], te_losses[:-1], te_stds[:-1], marker=".", color='b', label='Testing set', capsize=3)
  # plt.errorbar(neurons[:-1], tr_losses[:-1], tr_stds[:-1], marker=".", color='r', label='Training set', capsize=3)
  # plt.xlabel("Number of neurons in the hidden layer")
  # # plt.xscale('log')
  # plt.ylabel("Ln Q error")
  # # plt.title("F-score for polynomial degree and regularization factor")
  # plt.legend(loc=1)
  # plt.grid(True)
  # plt.savefig("hidden_layer_n", bbox_inches='tight')
  # plt.show()

  # reg = [0.6223169021680509, 0.6200601374570447, 0.6271159116556505, 0.6248932991890738]
  # svr = [0.4621063781979264, 0.46080275448719993, 0.5235617838991972, 0.4613175945126815]
  # ann = [0.366885705644607, 0.5475596410593129, 0.3717808349597753, 0.566230628035038]

  reg = [0.4668570652106104, 0.41650950517381685, 0.49228870203956576, 0.38552487038378314, 0.3490672588597832,
         0.44864479290696807, 0.4731613955147661, 0.4499156317200034, 0.4413386990759393, 0.5114482735059528,
         0.4168468311926959, 0.38994341726746223, 0.3111961733471609, 0.30750754515254597, 0.5189025489632071,
         0.561659550093437]
  svr = [0.29903574062754773, 0.32091980359170336, 0.3866166793765042, 0.2682663992130458, 0.2649593399472323,
         0.3045054692885195, 0.3620490703571802, 0.3307961019970368, 0.3715070782774328, 0.4185783611143628,
         0.3584252219546176, 0.31438886945113875, 0.25287509390611035, 0.23529846721571573, 0.32529739243213607,
         0.4242451103320543]
  ann = [0.2779298, 0.28635922, 0.25692606, 0.3077921, 0.20498772, 0.21251123, 0.30227277, 0.23670964, 0.32526824,
         0.27211908,
         0.30783623, 0.30908892, 0.24400726, 0.27530214, 0.27747434, 0.26191607]

  al = [reg, svr, ann]
  al.reverse()
  plt.figure()
  plt.hold = True
  labels = ['Least\nSquare\n(baseline)', 'SVR', 'ANN']
  labels.reverse()
  plt.boxplot(al, vert=False, labels=labels)
  plt.xlabel('Ln Q error on test')
  # plt.xlim(xmin=0)
  fig = plt.gcf()
  fig.set_size_inches(8, 4)
  fig.savefig('comp.png', bbox_inches='tight')
  # plt.savefig("comp", bbox_inches='tight')
  plt.show()